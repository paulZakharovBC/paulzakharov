{"version":3,"sources":["components/Portfolio/Portfolio.js","components/About/About.js","components/Contact/Contact.js","components/Navigation/Toggler/Toggler.js","components/Navigation/Drawer/Backdrop.js","components/Navigation/Links/Links.js","components/Navigation/Drawer/Drawer.js","components/Navigation/NavBar/NavBar.js","components/Home/SkillList/hardSkill.js","components/Home/SkillList/softSkill.js","components/Home/Experience/Experience.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Portfolio","className","About","Contact","Toggler","props","clsMenuToggler","clsBarHalfStart","clsBarHalfEnd","isMenuOpen","push","join","onClick","openToggleMenu","Backdrop","backdropClickHandler","Links","links","map","item","key","linkId","to","link","pageIdNowIsOpen","pageIdThatIsOpenNow","linkName","Drawer","cls","toolbar","hardSkill","hardSkills","slice","hardSkillId","typeOfSkill","HardSkillDescription","softSkill","softSkills","softSkillId","softSkillDescription","Experience","experience","company","when","duties","i","Home","changeSkillsList","showHardSkillList","App","state","warningWindow","experienceId","setState","prevState","this","path","exact","render","component","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c4162ee7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Portfolio.css'\r\n\r\nexport default function Portfolio() {\r\n    return (\r\n        <div className='portfolio-grid-box'>\r\n\r\n            <div className='portfolio-box1 boxes'>\r\n                <h3>Here my portfolio projects:</h3>\r\n            </div>\r\n\r\n            <div className='portfolio-box2 boxes' >\r\n                <h2>Project 1</h2>\r\n            </div>\r\n\r\n            <div className='portfolio-box3 boxes'>\r\n                <h2> Project 2 </h2>\r\n            </div>\r\n\r\n            <div className='portfolio-box4 boxes' >\r\n                <h2>Project 3</h2>\r\n            </div>\r\n\r\n            <div className='portfolio-box5 boxes' >\r\n                <h2> Project 4</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './About.css'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className='about-grid-box'>\r\n            <div className='about-box1'>\r\n                \r\n                <h3>Here should be my Photo</h3>\r\n\r\n            </div>\r\n\r\n            <div className='about-box2'>\r\n\r\n                <h1>General Information about Me</h1>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div className='about-grid-box'>\r\n            <div className='about-box1'>\r\n                \r\n                <h3>Here should be my Photo</h3>\r\n\r\n            </div>\r\n\r\n            <div className='about-box2'>\r\n\r\n                <h1>General Information about Me</h1>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Toggler.css'\r\n\r\nconst Toggler = (props) => {\r\n\r\n    const clsMenuToggler = ['menu-toggler'];\r\n    const clsBarHalfStart = ['bar half start'];\r\n    const clsBarHalfEnd = ['bar half end']\r\n\r\n    if (props.isMenuOpen) {\r\n        clsBarHalfStart.push('open');\r\n        clsBarHalfEnd.push('open')\r\n        clsMenuToggler.push('open')\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={clsMenuToggler.join(' ')}\r\n        onClick={props.openToggleMenu}>\r\n            <div className={clsBarHalfStart.join(' ')}></div>\r\n            <div className='bar'></div>\r\n            <div className={clsBarHalfEnd.join(' ')}></div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggler","import React from 'react'\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => {\r\n    return (\r\n        <div className='backdrop'\r\n        onClick={props.backdropClickHandler} />\r\n    )\r\n}\r\n\r\nexport default Backdrop","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Links = (props) => {\r\n\r\n    return (\r\n        <div className='toolbar_navigation-items'>\r\n            <ul>\r\n            {props.links.map(item => {\r\n                            return (\r\n                                <li \r\n                                     key={item.linkId}\r\n                                ><Link to={item.link}\r\n                                className={props.pageIdNowIsOpen === item.linkId ? 'menuLink openedLink' : 'menuLink'}\r\n                                  onClick={() => props.pageIdThatIsOpenNow(item.linkId)}>{item.linkName}</Link></li>\r\n                            )\r\n                        })}\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Links\r\n","import React from 'react'\r\nimport Backdrop from './Backdrop'\r\nimport './Drawer.css'\r\nimport Links from '../Links/Links'\r\n\r\nconst Drawer = (props) => {\r\n\r\n    const cls = ['drawer']\r\n\r\n    if (!props.isMenuOpen) {\r\n        cls.push('opened')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={cls.join(' ')}>\r\n                <ul>\r\n                    <Links links={props.links}\r\n                               pageIdNowIsOpen={props.pageIdNowIsOpen}\r\n                               pageIdThatIsOpenNow={props.pageIdThatIsOpenNow} />\r\n                </ul>\r\n            </div>\r\n            {props.isMenuOpen ? <Backdrop backdropClickHandler={props.backdropClickHandler} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drawer;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './NavBar.css'\r\nimport Toggler from '../Toggler/Toggler'\r\nimport Drawer from '../Drawer/Drawer'\r\nimport Links from '../Links/Links'\r\n\r\nconst toolbar = (props) => {\r\n\r\n    \r\n    return (\r\n        <header className='toolbar'>\r\n            <nav className='toolbar_navigation'>\r\n                <Toggler\r\n                    openToggleMenu={props.openToggleMenu}\r\n                    isMenuOpen={props.isMenuOpen}\r\n                />\r\n                <Drawer\r\n                    links={props.links}\r\n                    pageIdNowIsOpen={props.pageIdNowIsOpen}\r\n                    pageIdThatIsOpenNow={props.pageIdThatIsOpenNow}\r\n                    isMenuOpen={props.isMenuOpen} />\r\n\r\n\r\n                <div className='toolbar_logo'> <Link to='/'> LOGO </Link></div>\r\n                <div className='spacer'></div>  {/*Пустой контейнер который возьмет место между лого и меню */}\r\n                <div className='toolbar_navigation-items'>\r\n\r\n\r\n                    <ul className='top-menu'>\r\n                        <Links \r\n                               links={props.links}\r\n                               pageIdNowIsOpen={props.pageIdNowIsOpen}\r\n                               pageIdThatIsOpenNow={props.pageIdThatIsOpenNow} />\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default toolbar;\r\n","import React from 'react'\r\n\r\nconst hardSkill = (props) => {\r\n    return (\r\n        <div className='skill-box'>\r\n            <div className='skills'>\r\n                <h1 className='title'>{props.hardSkills[0]}</h1>\r\n            </div>\r\n            <ul className='listOfSkills'>\r\n                {props.hardSkills.slice(1).map(item => {\r\n                    return (\r\n                        <li key={item.hardSkillId}>\r\n                            <span className='typeOfSkill'>{item.typeOfSkill}:</span> &nbsp;\r\n                            {item.HardSkillDescription}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default hardSkill\r\n","import React from 'react'\r\n\r\nconst softSkill = (props) => {\r\n    return (\r\n        <div className='skill-box'>\r\n            <div className='skills'>\r\n                <h1 className='title'>{props.softSkills[0]}</h1>\r\n            </div>\r\n            <ul className='listOfSkills'>\r\n                {props.softSkills.slice(1).map(item => {\r\n                    return (\r\n                        <li key={item.softSkillId}>\r\n                            {item.softSkillDescription}\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default softSkill\r\n","import React from 'react'\r\n\r\nconst Experience = (props) => {\r\n    return (\r\n        <div className='exp-container'>\r\n            {props.experience.map(item => {\r\n                return (\r\n                    <div className='exp-box'>\r\n                        <h3>{item.company}</h3>\r\n                        <h4>{item.when}</h4>\r\n                        <ul>\r\n                          {item.duties.map(i => {\r\n                              return (\r\n                                  \r\n                                      <li key={i+1}>\r\n                                          {i}\r\n                                      </li>\r\n                                \r\n                              )\r\n                          })}    \r\n                        </ul>\r\n                    </div>\r\n\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Experience;\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport HardSkill from './SkillList/hardSkill';\r\nimport SoftSkill from './SkillList/softSkill';\r\nimport Experience from './Experience/Experience';\r\n\r\nconst Home = (props) => {\r\n    return (\r\n\r\n        <div className='grid-box'>\r\n            <div className='box1'>\r\n                <h1>Paul </h1>\r\n                <h1>Zakharov</h1>\r\n                <h3>FrontEnd Developer</h3>\r\n            </div>\r\n\r\n            <div className='box2'>\r\n                <i className=\"fas fa-angle-left arrowBtn\"\r\n                    onClick={props.changeSkillsList} />\r\n                <div className='flex-cont'>\r\n\r\n\r\n\r\n\r\n                    {props.showHardSkillList ? <HardSkill\r\n                        hardSkills={props.hardSkills} /> : <SoftSkill\r\n                            softSkills={props.softSkills} />}\r\n\r\n\r\n                </div>\r\n                <i className=\"fas fa-angle-right arrowBtn\" onClick={props.changeSkillsList} />\r\n\r\n            </div>\r\n\r\n            <div className='box3'>\r\n                <h2>Experience</h2>\r\n                <Experience\r\n                    experience={props.experience}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Portfolio from './components/Portfolio/Portfolio'\nimport About from './components/About/About'\nimport Contact from './components/Contact/Contact'\nimport Toolbar from './components/Navigation/NavBar/NavBar'\nimport Home from './components/Home/Home'\n\nclass App extends Component {\n  state = {\n    isMenuOpen: false,\n    showHardSkillList: true,\n    warningWindow: true,\n    pageIdNowIsOpen: 0,\n    links: [\n      {\n        linkName: 'Home',\n        linkId: 0,\n        link: '/'\n      },\n      {\n        linkName: 'Portfolio',\n        linkId: 1,\n        link: '/portfolio'\n      },\n      {\n        linkName: 'About',\n        linkId: 2,\n        link: '/about'\n      },\n      {\n        linkName: 'Contact',\n        linkId: 3,\n        link: '/contact'\n      }\n    ],\n    hardSkills: [\n      'My Hard Skills: ',\n      {\n        hardSkillId: 1,\n        typeOfSkill: 'Languages',\n        HardSkillDescription: 'JavaScript, TypeScript, ES6+'\n      },\n      {\n        hardSkillId: 2,\n        typeOfSkill: 'Frameworks',\n        HardSkillDescription: 'React (inc. React.Hooks, Redux)' \n      },\n      {\n        hardSkillId: 3,\n        typeOfSkill: 'Server-side',\n        HardSkillDescription: 'Node.js, npm, npm scripts, Yarn, Create React App'\n      },\n      {\n        hardSkillId: 4,\n        typeOfSkill: 'UI & UX',\n        HardSkillDescription: 'UI & UX: Cross-browser, Adaptive, Responsive, Accessible, Mobile-first, Offline-first, Graceful degradation, Progressive enhancement, Performance'\n      },\n      {\n        hardSkillId: 5,\n        typeOfSkill: 'Layout / template',\n        HardSkillDescription: 'HTML, HTML5, JSX'\n      },\n      {\n        hardSkillId: 6,\n        typeOfSkill: 'Styles',\n        HardSkillDescription: 'CSS, CSS3, JSS, CSS-in-JS, PostCSS'\n      },\n      {\n        hardSkillId: 7,\n        typeOfSkill: 'Utility libraries',\n        HardSkillDescription: 'jQuery, React router, Redux form'\n      },\n      {\n        hardSkillId: 8,\n        typeOfSkill: 'UI libraries',\n        HardSkillDescription: 'Bootstrap, Material UI'\n      },\n      {\n        hardSkillId: 9,\n        typeOfSkill: 'Version control',\n        HardSkillDescription: 'Git, GitHub, Bitbucket'\n      }\n\n    ],\n    softSkills: [\n      'My Soft Skills: ',\n      {\n        softSkillId: 1,\n        typeOfSkill: 'Fast Learner',\n        softSkillDescription: 'быстро учусь'\n      },\n      {\n        softSkillId: 2,\n        softSkillDescription: 'адаптивность'\n      }\n    ],\n    experience: [\n      {\n        experienceId: 0,\n        company: 'Ekit',\n        when: 'March 2019 - March 2020',\n        duties: ['helping', 'developing', 'drinking']\n\n      }\n    ]\n  }\n\n  openToggleMenu = () => {\n    this.setState(prevState => {\n      return {\n        isMenuOpen: !prevState.isMenuOpen\n      }\n    })\n\n  }\n\n  backdropClickHandler = () => {\n    this.setState({\n      isMenuOpen: false\n    })\n\n  }\n\n  changeSkillsList = () => {\n    this.setState(prevState => {\n      return {\n        showHardSkillList: !prevState.showHardSkillList\n      }\n    })\n  }\n\n  pageIdThatIsOpenNow = (linkId) => {\n    this.setState({\n      pageIdNowIsOpen: linkId,\n      isMenuOpen: false\n    })\n\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <div className='home-page'>\n            <div className='overlay'>\n              <Toolbar\n                backdropClickHandler={this.backdropClickHandler}\n                links={this.state.links}\n                pageIdNowIsOpen={this.state.pageIdNowIsOpen}\n                isMenuOpen={this.state.isMenuOpen}\n                openToggleMenu={this.openToggleMenu}\n                pageIdThatIsOpenNow={this.pageIdThatIsOpenNow} />\n\n              <Switch>\n\n                <Route path='/' exact render={() =>\n                  <Home\n                    showHardSkillList={this.state.showHardSkillList}\n                    changeSkillsList={this.changeSkillsList}\n                    hardSkills={this.state.hardSkills}\n                    softSkills={this.state.softSkills}\n                    experience={this.state.experience} />} />\n                <Route path='/about' component={About} />\n                <Route path='/portfolio' component={Portfolio} />\n                <Route path='/contact' component={Contact} />\n              </Switch>\n\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}